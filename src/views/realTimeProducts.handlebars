<div class="box">
    <h1>Productos</h1>
    <hr>

    <div class="products-form">
        <h2>Crear Producto</h2>
        <form id="productForm">
            <label for="title">Título</label>
            <input name="title" id="title" type="text" required>

            <label for="description">Descripción</label>
            <input name="description" id="description" type="text" required>

            <label for="code">Código</label>
            <input name="code" id="code" type="text" required>

            <label for="price">Precio</label>
            <input name="price" id="price" type="number" required>

            <label for="stock">Stock</label>
            <input name="stock" id="stock" type="number" required>

            <label for="category">Categoría</label>
            <input name="category" id="category" type="text" required>

            <button id="button-create" type="submit">Crear</button>
        </form>
    </div>

    <hr>

    <div class="products-box" id="productsContainer">
        {{#each products}}
            <div class="product-card" data-id="{{this._id}}">
                <h3>{{this.title}}</h3>
                <hr>
                <p>Categoría: {{this.category}}</p>
                <p>Descripción: {{this.description}}</p>
                <p>Precio: $ {{this.price}}</p>
                <button class="button-delete" data-id="{{this._id}}">Eliminar</button>
                <button class="button-add-to-cart" data-id="{{this._id}}">Añadir al carrito</button>
            </div>
        {{/each}}
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    
    document.getElementById('productForm').addEventListener('submit', async e => {
        e.preventDefault();
        const button = document.getElementById('button-create');
        button.disabled = true;

        const title = e.target.title.value;
        const description = e.target.description.value;
        const code = e.target.code.value;
        const price = Number(e.target.price.value);
        const stock = Number(e.target.stock.value);
        const category = e.target.category.value;

      
        if (price <= 0 || stock < 0) {
            alert('El precio debe ser mayor a 0 y el stock no puede ser negativo.');
            button.disabled = false;
            return;
        }

        const data = { title, description, code, price, stock, category };
        socket.emit('createProduct', data);

        e.target.reset();
        button.disabled = false;
    });

    
    socket.on('publishProducts', (products) => {
        const container = document.getElementById('productsContainer');
        container.innerHTML = '';
        products.forEach(product => {
            const productDiv = document.createElement('div');
            productDiv.classList.add('product-card');
            productDiv.dataset.id = product._id;
            productDiv.innerHTML = `
                <h3>${product.title}</h3>
                <hr>
                <p>Categoría: ${product.category}</p>
                <p>Descripción: ${product.description}</p>
                <p>Precio: $ ${product.price}</p>
                <button class="button-delete" data-id="${product._id}">Eliminar</button>
                <button class="button-add-to-cart" data-id="${product._id}">Añadir al carrito</button>
            `;
            container.appendChild(productDiv);
        });
        attachButtonsListeners();
    });

    
    function deleteProduct(pid) {
        socket.emit('deleteProduct', { pid });
    }

   
    function attachButtonsListeners() {
        document.querySelectorAll('.button-delete').forEach(button => {
            button.onclick = () => deleteProduct(button.dataset.id);
        });
        document.querySelectorAll('.button-add-to-cart').forEach(button => {
            button.onclick = () => addToCart(button.dataset.id);
        });
    }

    attachButtonsListeners();

    
    function showButtonCart() {
        const cartId = localStorage.getItem('cartId');
        const viewCart = document.querySelector('.view-cart');
        const buttonCart = document.querySelector('#button-cart');

        if (cartId) {
            if (buttonCart) buttonCart.setAttribute("href", `/cart/${cartId}`);
            if (viewCart) viewCart.style.display = "block";
        } else {
            if (viewCart) viewCart.style.display = "none";
        }
    }

    
    async function addToCart(pid) {
        try {
            let cartId = localStorage.getItem('cartId');

            if (!cartId) {
                const response = await fetch('/api/carts', { method: 'POST' });
                const data = await response.json();

                if (data.status === 'error') {
                    return alert(data.message);
                }

                cartId = data.payload._id;
                localStorage.setItem('cartId', cartId);
            }

            const responseAdd = await fetch(`/api/carts/${cartId}/product/${pid}`, { method: 'POST' });
            const resultAdd = await responseAdd.json();

            if (resultAdd.status === 'error') {
                return alert(resultAdd.message);
            }

            showButtonCart();
            alert('Producto añadido satisfactoriamente!');
        } catch (error) {
            console.error('Error en addToCart:', error);
            alert('Error inesperado al añadir producto.');
        }
    }

    showButtonCart();
</script>
